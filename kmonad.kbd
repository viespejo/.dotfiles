(defcfg
  ;; For Linux
  input  (device-file "$KBD_DEV")
  output (uinput-sink "KMonad kbd")
  cmp-seq ralt    ;; Set the compose key to `RightAlt'
  cmp-seq-delay 5 ;; 5ms delay between each compose-key sequence press

  ;; For Windows
  ;; input  (low-level-hook)
  ;; output (send-event-sink)

  ;; For MacOS
  ;; input  (iokit-name "my-keyboard-product-string")
  ;; output (kext)

  ;; Comment this if you want unhandled events not to be emitted
  fallthrough true

  ;; Set this to false to disable any command-execution in KMonad
  allow-cmd true
)

(defsrc
  esc        f1    f2    f3    f4    f5    f6    f7    f8    f9       f10    f11    f12   prnt  ins  del
  `          1     2     3     4     5     6     7     8     9        0      -      =     bspc       home
  tab        q     w     e     r     t     y     u     i     o        p      [      ]     ret        pgup
  caps       a     s     d     f     g     h     j     k     l        ;      '      \                pgdn
  lsft lsgt  z     x     c     v     b     n     m     ,     .        /      rsft                    end
  lctl       lmet  lalt  spc                           ralt  KeyMenu  rctl  left         up down    rght
)


(defalias
  num  (layer-toggle numbers) ;; Bind num to a button that switches to a layer
  cesc (tap-next esc (layer-toggle moving)) ;; Tap for esc, hold for ctrl
  met_a (tap-hold-next-release 500 a lmet)
  alt_s (tap-hold-next-release 500 s lalt)
  ctl_d (tap-hold-next-release 500 d lctl)
  sft_f (tap-hold-next-release 500 f lsft)
  sft_j (tap-hold-next-release 500 j rsft)
  ctl_k (tap-hold-next-release 500 k rctl)
  alt_l (tap-hold-next-release 500 l ralt)
  met_; (tap-hold-next-release 500 ; rmet)
)


(deflayer qwerty
  esc         f1    f2    f3    f4    f5    f6    f7    f8    f9       f10    f11    f12   prnt  ins  del
  `          1     2     3     4     5     6     7     8     9        0      -      =     bspc        home
  tab        q     w     e     r     t     y     u     i     o        p      [      ]     ret         pgup
  @cesc      @met_a @alt_s @ctl_d @sft_f g h     @sft_j @ctl_k @alt_l @met_; '      \                 pgdn
  lsft @num    z     x     c     v     b     n     m     ,     .        /    rsft                    end
  XX         XX    bspc  spc                           ret   KeyMenu  XX     left      up down        rght
)

;; This is a layer that is completely empty, it is useful for testing purposes
(deflayer empty
  _        _    _    _    _    _    _    _    _    _   _   _   _   _  _  _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    _    _    _    _    _   _   _   _         _
  _   _    _    _    _    _    _    _    _    _    _   _   _             _
  _        _    _    _                        _    _   _   _     _ _     _
)

(deflayer moving
  _        _    _    _    _    _    _    _    _    _   _   _   _   _  _  _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    _   left down up rght   _   _   _         _
  _   _    _    _    _    _    _    _    _   home end  _   _             _
  _        _    _    _                        _    _   _   _     _ _     _
)

(deflayer numbers
  _        _    _    _    _    _    _    _    _    _   _   _   _   _  _  _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    XX   /    7    8    9   -   _   _   _     _
  _        _    \(   \)   _    XX   *    4    5    6   +   _   _         _
  _   _    _    _    _    _    XX   0    1    2    3   .   _             _
  _        _    _    _                        _    _   _   _     _ _     _
)

(deflayer symbols
  _        _    _    _    _    _    _    _    _    _   _   _   _   _  _  _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    _    _    _    _    _   _   _   _   _     _
  _        _    _    _    _    _    _    _    _    _   _   _   _         _
  _   _    _    _    _    _    _    _    _    _    _   _   _             _
  _        _    _    _                        _    _   _   _     _ _     _
)
